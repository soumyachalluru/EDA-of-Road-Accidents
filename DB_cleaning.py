{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 178,
   "id": "e1148409-4e92-4511-b5a2-9a87188ae24d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import csv\n",
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "1fc677de-1951-43a0-8722-fa90655461c7",
   "metadata": {},
   "outputs": [],
   "source": [
    "P_path = '/Users/sugandhachauhan/Documents/Fin_parties 2 - parties 2.csv'\n",
    "df= pd.read_csv(P_path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "b94385f8-c4a9-40a9-909b-21929de6100a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>case_id</th>\n",
       "      <th>party_number</th>\n",
       "      <th>party_type</th>\n",
       "      <th>party_sex</th>\n",
       "      <th>party_age</th>\n",
       "      <th>cellphone_use</th>\n",
       "      <th>party_number_killed</th>\n",
       "      <th>party_number_injured</th>\n",
       "      <th>movement_preceding_collision</th>\n",
       "      <th>party_vehicle</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16</td>\n",
       "      <td>3511283.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>female</td>\n",
       "      <td>43.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>HYUNDAI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>17</td>\n",
       "      <td>3511283.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>28.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>INTERNATIONAL HARVESTER</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>535</td>\n",
       "      <td>3515256.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>25.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>making left turn</td>\n",
       "      <td>FREIGHTLINER</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>536</td>\n",
       "      <td>3515256.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>HARLEY-DAVIDSON</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>579</td>\n",
       "      <td>3515353.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>59.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>backing</td>\n",
       "      <td>HONDA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>580</td>\n",
       "      <td>3515353.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>34.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>HONDA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1251</td>\n",
       "      <td>3522213.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>39.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>FREIGHTLINER</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1252</td>\n",
       "      <td>3522213.0</td>\n",
       "      <td>2</td>\n",
       "      <td>other</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>other</td>\n",
       "      <td>HARLEY-DAVIDSON</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1532</td>\n",
       "      <td>3522552.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>making left turn</td>\n",
       "      <td>CHEVROLET</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1533</td>\n",
       "      <td>3522552.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>43.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>KAWASAKI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1764</td>\n",
       "      <td>3522688.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>43.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>changing lanes</td>\n",
       "      <td>INTERNATIONAL HARVESTER</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1765</td>\n",
       "      <td>3522688.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>47.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>SATURN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1855</td>\n",
       "      <td>3522758.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>52.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>KAWASAKI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1856</td>\n",
       "      <td>3522758.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>female</td>\n",
       "      <td>54.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>TOYOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2045</td>\n",
       "      <td>3524606.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>37.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>INTERNATIONAL HARVESTER</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2046</td>\n",
       "      <td>3524606.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>45.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>stopped</td>\n",
       "      <td>HONDA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2261</td>\n",
       "      <td>3524755.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>19.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>HUSQVARNA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2262</td>\n",
       "      <td>3524755.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>BMW</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2532</td>\n",
       "      <td>3524907.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>female</td>\n",
       "      <td>37.0</td>\n",
       "      <td>C</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>OTHER - MOPED</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2533</td>\n",
       "      <td>3524907.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>female</td>\n",
       "      <td>40.0</td>\n",
       "      <td>C</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>stopped</td>\n",
       "      <td>FORD</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      id    case_id  party_number party_type party_sex  party_age  \\\n",
       "0     16  3511283.0             1     driver    female       43.0   \n",
       "1     17  3511283.0             2     driver      male       28.0   \n",
       "2    535  3515256.0             1     driver      male       25.0   \n",
       "3    536  3515256.0             2     driver      male       35.0   \n",
       "4    579  3515353.0             1     driver      male       59.0   \n",
       "5    580  3515353.0             2     driver      male       34.0   \n",
       "6   1251  3522213.0             1     driver      male       39.0   \n",
       "7   1252  3522213.0             2      other       NaN        NaN   \n",
       "8   1532  3522552.0             1     driver      male       47.0   \n",
       "9   1533  3522552.0             2     driver      male       43.0   \n",
       "10  1764  3522688.0             1     driver      male       43.0   \n",
       "11  1765  3522688.0             2     driver      male       47.0   \n",
       "12  1855  3522758.0             1     driver      male       52.0   \n",
       "13  1856  3522758.0             2     driver    female       54.0   \n",
       "14  2045  3524606.0             1     driver      male       37.0   \n",
       "15  2046  3524606.0             2     driver      male       45.0   \n",
       "16  2261  3524755.0             1     driver      male       19.0   \n",
       "17  2262  3524755.0             2     driver      male       26.0   \n",
       "18  2532  3524907.0             1     driver    female       37.0   \n",
       "19  2533  3524907.0             2     driver    female       40.0   \n",
       "\n",
       "   cellphone_use  party_number_killed  party_number_injured  \\\n",
       "0              3                    0                     1   \n",
       "1              3                    0                     0   \n",
       "2              3                    0                     0   \n",
       "3              3                    0                     1   \n",
       "4              3                    0                     0   \n",
       "5              3                    1                     0   \n",
       "6              3                    0                     0   \n",
       "7              3                    0                     0   \n",
       "8              1                    0                     1   \n",
       "9              3                    1                     0   \n",
       "10           NaN                    0                     0   \n",
       "11           NaN                    0                     0   \n",
       "12             3                    1                     1   \n",
       "13             3                    0                     0   \n",
       "14             3                    0                     0   \n",
       "15             3                    0                     1   \n",
       "16             3                    0                     1   \n",
       "17             3                    0                     0   \n",
       "18             C                    0                     2   \n",
       "19             C                    0                     0   \n",
       "\n",
       "   movement_preceding_collision            party_vehicle  \n",
       "0           proceeding straight                  HYUNDAI  \n",
       "1           proceeding straight  INTERNATIONAL HARVESTER  \n",
       "2              making left turn             FREIGHTLINER  \n",
       "3           proceeding straight          HARLEY-DAVIDSON  \n",
       "4                       backing                    HONDA  \n",
       "5           proceeding straight                    HONDA  \n",
       "6           proceeding straight             FREIGHTLINER  \n",
       "7                         other          HARLEY-DAVIDSON  \n",
       "8              making left turn                CHEVROLET  \n",
       "9           proceeding straight                 KAWASAKI  \n",
       "10               changing lanes  INTERNATIONAL HARVESTER  \n",
       "11          proceeding straight                   SATURN  \n",
       "12          proceeding straight                 KAWASAKI  \n",
       "13          proceeding straight                   TOYOTA  \n",
       "14          proceeding straight  INTERNATIONAL HARVESTER  \n",
       "15                      stopped                    HONDA  \n",
       "16          proceeding straight                HUSQVARNA  \n",
       "17          proceeding straight                      BMW  \n",
       "18          proceeding straight            OTHER - MOPED  \n",
       "19                      stopped                     FORD  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "ac24e2e1-96ad-4694-a25d-ccd8e4c092de",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "cellphone_use                   80491\n",
       "party_age                       45583\n",
       "party_sex                       38091\n",
       "party_vehicle                   26732\n",
       "movement_preceding_collision     4931\n",
       "party_type                        596\n",
       "id                                  0\n",
       "case_id                             0\n",
       "party_number                        0\n",
       "party_number_killed                 0\n",
       "party_number_injured                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum().sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "0d009b8d-5cc4-4477-b9b5-7fce87e62713",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'Missing Values As Percentages In Parties '}>"
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "missing_percentage_parties = df.isna().sum().sort_values(ascending=False)/len(df)\n",
    "missing_percentage_parties[missing_percentage_parties!= 0].plot(kind = 'barh', title ='Missing Values As Percentages In Parties ' )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "3f70ad83-07a8-47a2-a937-97a91178b3bb",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['cellphone_use'] = df['cellphone_use'].fillna(4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "51a6d81f-ff23-4a52-84c6-ee172c510dae",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['cellphone_use'].replace({'C':3,'D':4},inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "44502962-4cee-4c9d-be75-59972b5ab30b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>case_id</th>\n",
       "      <th>party_number</th>\n",
       "      <th>party_type</th>\n",
       "      <th>party_sex</th>\n",
       "      <th>party_age</th>\n",
       "      <th>cellphone_use</th>\n",
       "      <th>party_number_killed</th>\n",
       "      <th>party_number_injured</th>\n",
       "      <th>movement_preceding_collision</th>\n",
       "      <th>party_vehicle</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16</td>\n",
       "      <td>3511283.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>female</td>\n",
       "      <td>43.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>HYUNDAI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>17</td>\n",
       "      <td>3511283.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>28.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>INTERNATIONAL HARVESTER</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>535</td>\n",
       "      <td>3515256.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>25.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>making left turn</td>\n",
       "      <td>FREIGHTLINER</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>536</td>\n",
       "      <td>3515256.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>HARLEY-DAVIDSON</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>579</td>\n",
       "      <td>3515353.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>59.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>backing</td>\n",
       "      <td>HONDA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>580</td>\n",
       "      <td>3515353.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>34.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>HONDA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1251</td>\n",
       "      <td>3522213.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>39.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>FREIGHTLINER</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1252</td>\n",
       "      <td>3522213.0</td>\n",
       "      <td>2</td>\n",
       "      <td>other</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>other</td>\n",
       "      <td>HARLEY-DAVIDSON</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1532</td>\n",
       "      <td>3522552.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>making left turn</td>\n",
       "      <td>CHEVROLET</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1533</td>\n",
       "      <td>3522552.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>43.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>KAWASAKI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1764</td>\n",
       "      <td>3522688.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>43.0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>changing lanes</td>\n",
       "      <td>INTERNATIONAL HARVESTER</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1765</td>\n",
       "      <td>3522688.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>47.0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>SATURN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1855</td>\n",
       "      <td>3522758.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>52.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>KAWASAKI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1856</td>\n",
       "      <td>3522758.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>female</td>\n",
       "      <td>54.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>TOYOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2045</td>\n",
       "      <td>3524606.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>37.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>INTERNATIONAL HARVESTER</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2046</td>\n",
       "      <td>3524606.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>45.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>stopped</td>\n",
       "      <td>HONDA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2261</td>\n",
       "      <td>3524755.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>19.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>HUSQVARNA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2262</td>\n",
       "      <td>3524755.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>BMW</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2532</td>\n",
       "      <td>3524907.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>female</td>\n",
       "      <td>37.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>OTHER - MOPED</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2533</td>\n",
       "      <td>3524907.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>female</td>\n",
       "      <td>40.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>stopped</td>\n",
       "      <td>FORD</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      id    case_id  party_number party_type party_sex  party_age  \\\n",
       "0     16  3511283.0             1     driver    female       43.0   \n",
       "1     17  3511283.0             2     driver      male       28.0   \n",
       "2    535  3515256.0             1     driver      male       25.0   \n",
       "3    536  3515256.0             2     driver      male       35.0   \n",
       "4    579  3515353.0             1     driver      male       59.0   \n",
       "5    580  3515353.0             2     driver      male       34.0   \n",
       "6   1251  3522213.0             1     driver      male       39.0   \n",
       "7   1252  3522213.0             2      other       NaN        NaN   \n",
       "8   1532  3522552.0             1     driver      male       47.0   \n",
       "9   1533  3522552.0             2     driver      male       43.0   \n",
       "10  1764  3522688.0             1     driver      male       43.0   \n",
       "11  1765  3522688.0             2     driver      male       47.0   \n",
       "12  1855  3522758.0             1     driver      male       52.0   \n",
       "13  1856  3522758.0             2     driver    female       54.0   \n",
       "14  2045  3524606.0             1     driver      male       37.0   \n",
       "15  2046  3524606.0             2     driver      male       45.0   \n",
       "16  2261  3524755.0             1     driver      male       19.0   \n",
       "17  2262  3524755.0             2     driver      male       26.0   \n",
       "18  2532  3524907.0             1     driver    female       37.0   \n",
       "19  2533  3524907.0             2     driver    female       40.0   \n",
       "\n",
       "   cellphone_use  party_number_killed  party_number_injured  \\\n",
       "0              3                    0                     1   \n",
       "1              3                    0                     0   \n",
       "2              3                    0                     0   \n",
       "3              3                    0                     1   \n",
       "4              3                    0                     0   \n",
       "5              3                    1                     0   \n",
       "6              3                    0                     0   \n",
       "7              3                    0                     0   \n",
       "8              1                    0                     1   \n",
       "9              3                    1                     0   \n",
       "10             4                    0                     0   \n",
       "11             4                    0                     0   \n",
       "12             3                    1                     1   \n",
       "13             3                    0                     0   \n",
       "14             3                    0                     0   \n",
       "15             3                    0                     1   \n",
       "16             3                    0                     1   \n",
       "17             3                    0                     0   \n",
       "18             3                    0                     2   \n",
       "19             3                    0                     0   \n",
       "\n",
       "   movement_preceding_collision            party_vehicle  \n",
       "0           proceeding straight                  HYUNDAI  \n",
       "1           proceeding straight  INTERNATIONAL HARVESTER  \n",
       "2              making left turn             FREIGHTLINER  \n",
       "3           proceeding straight          HARLEY-DAVIDSON  \n",
       "4                       backing                    HONDA  \n",
       "5           proceeding straight                    HONDA  \n",
       "6           proceeding straight             FREIGHTLINER  \n",
       "7                         other          HARLEY-DAVIDSON  \n",
       "8              making left turn                CHEVROLET  \n",
       "9           proceeding straight                 KAWASAKI  \n",
       "10               changing lanes  INTERNATIONAL HARVESTER  \n",
       "11          proceeding straight                   SATURN  \n",
       "12          proceeding straight                 KAWASAKI  \n",
       "13          proceeding straight                   TOYOTA  \n",
       "14          proceeding straight  INTERNATIONAL HARVESTER  \n",
       "15                      stopped                    HONDA  \n",
       "16          proceeding straight                HUSQVARNA  \n",
       "17          proceeding straight                      BMW  \n",
       "18          proceeding straight            OTHER - MOPED  \n",
       "19                      stopped                     FORD  "
      ]
     },
     "execution_count": 129,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "d6a80eac-1df2-4368-9846-6e358ee68260",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                                  0\n",
       "case_id                             0\n",
       "party_number                        0\n",
       "party_type                        596\n",
       "party_sex                       38091\n",
       "party_age                       45583\n",
       "cellphone_use                       0\n",
       "party_number_killed                 0\n",
       "party_number_injured                0\n",
       "movement_preceding_collision     4931\n",
       "party_vehicle                   26732\n",
       "dtype: int64"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "2cf04442-0430-467c-99f3-7302d7d771c3",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_csv('cleaned_parties.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "39958941-29ce-470b-b29b-e19722aa3229",
   "metadata": {},
   "outputs": [],
   "source": [
    "V_path = '/Users/sugandhachauhan/Desktop/Fin_victims 2 - victims 2.csv'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "a64c729e-871b-4f28-9bfa-c4b49c498c14",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/0y/bpmhmsxx4c59t_10xgtb65400000gn/T/ipykernel_63595/3054737079.py:1: DtypeWarning: Columns (7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  df2 = pd.read_csv(V_path)\n"
     ]
    }
   ],
   "source": [
    "df2 = pd.read_csv(V_path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "895f3403-542f-406e-a3ae-ee0ef2809dd5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>case_id</th>\n",
       "      <th>party_number</th>\n",
       "      <th>victim_role</th>\n",
       "      <th>victim_sex</th>\n",
       "      <th>victim_age</th>\n",
       "      <th>victim_degree_of_injury</th>\n",
       "      <th>victim_seating_position</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "      <td>3511283.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>43.0</td>\n",
       "      <td>other visible injury</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>247</td>\n",
       "      <td>3515256.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>complaint of pain</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>265</td>\n",
       "      <td>3515353.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>34.0</td>\n",
       "      <td>killed</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>699</td>\n",
       "      <td>3522552.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>47.0</td>\n",
       "      <td>other visible injury</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>700</td>\n",
       "      <td>3522552.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>43.0</td>\n",
       "      <td>killed</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>799</td>\n",
       "      <td>3522688.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>male</td>\n",
       "      <td>20.0</td>\n",
       "      <td>no injury</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>800</td>\n",
       "      <td>3522688.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>no injury</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>801</td>\n",
       "      <td>3522688.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>male</td>\n",
       "      <td>21.0</td>\n",
       "      <td>no injury</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>860</td>\n",
       "      <td>3522758.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>female</td>\n",
       "      <td>50.0</td>\n",
       "      <td>killed</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>861</td>\n",
       "      <td>3522758.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>52.0</td>\n",
       "      <td>severe injury</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>862</td>\n",
       "      <td>3522758.0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>male</td>\n",
       "      <td>50.0</td>\n",
       "      <td>no injury</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>863</td>\n",
       "      <td>3522758.0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>male</td>\n",
       "      <td>73.0</td>\n",
       "      <td>no injury</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>953</td>\n",
       "      <td>3524606.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>45.0</td>\n",
       "      <td>other visible injury</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1089</td>\n",
       "      <td>3524755.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>19.0</td>\n",
       "      <td>other visible injury</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1241</td>\n",
       "      <td>3524907.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>37.0</td>\n",
       "      <td>other visible injury</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1242</td>\n",
       "      <td>3524907.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>male</td>\n",
       "      <td>9.0</td>\n",
       "      <td>other visible injury</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1625</td>\n",
       "      <td>3526218.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>47.0</td>\n",
       "      <td>complaint of pain</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1650</td>\n",
       "      <td>3526249.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>other visible injury</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1823</td>\n",
       "      <td>3526444.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>43.0</td>\n",
       "      <td>complaint of pain</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1824</td>\n",
       "      <td>3526444.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>complaint of pain</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      id    case_id  party_number  victim_role victim_sex  victim_age  \\\n",
       "0      4  3511283.0             1            1     female        43.0   \n",
       "1    247  3515256.0             2            1       male        35.0   \n",
       "2    265  3515353.0             2            1       male        34.0   \n",
       "3    699  3522552.0             1            1       male        47.0   \n",
       "4    700  3522552.0             2            1       male        43.0   \n",
       "5    799  3522688.0             1            2       male        20.0   \n",
       "6    800  3522688.0             1            2       male        22.0   \n",
       "7    801  3522688.0             1            2       male        21.0   \n",
       "8    860  3522758.0             1            2     female        50.0   \n",
       "9    861  3522758.0             1            1       male        52.0   \n",
       "10   862  3522758.0             2            2       male        50.0   \n",
       "11   863  3522758.0             2            2       male        73.0   \n",
       "12   953  3524606.0             2            1       male        45.0   \n",
       "13  1089  3524755.0             1            1       male        19.0   \n",
       "14  1241  3524907.0             1            1     female        37.0   \n",
       "15  1242  3524907.0             1            2       male         9.0   \n",
       "16  1625  3526218.0             1            1       male        47.0   \n",
       "17  1650  3526249.0             1            1       male        26.0   \n",
       "18  1823  3526444.0             1            1       male        43.0   \n",
       "19  1824  3526444.0             1            2     female        35.0   \n",
       "\n",
       "   victim_degree_of_injury victim_seating_position  \n",
       "0     other visible injury                       1  \n",
       "1        complaint of pain                       1  \n",
       "2                   killed                       1  \n",
       "3     other visible injury                       1  \n",
       "4                   killed                       1  \n",
       "5                no injury                       9  \n",
       "6                no injury                       9  \n",
       "7                no injury                       9  \n",
       "8                   killed                       0  \n",
       "9            severe injury                       1  \n",
       "10               no injury                       3  \n",
       "11               no injury                       6  \n",
       "12    other visible injury                       2  \n",
       "13    other visible injury                       1  \n",
       "14    other visible injury                       1  \n",
       "15    other visible injury                       4  \n",
       "16       complaint of pain                       1  \n",
       "17    other visible injury                       1  \n",
       "18       complaint of pain                       1  \n",
       "19       complaint of pain                       2  "
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "98a4e79b-d7f0-4d81-9dbc-be7682b14eb9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "victim_sex                 7015\n",
       "victim_age                 5100\n",
       "victim_seating_position     232\n",
       "id                            0\n",
       "case_id                       0\n",
       "party_number                  0\n",
       "victim_role                   0\n",
       "victim_degree_of_injury       0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.isna().sum().sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "b832baab-7e5b-4495-b860-821748df7761",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'Missing Values As Percentages In Victims'}>"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "missing_percentage_victim = df2.isna().sum().sort_values(ascending=False)/len(df2)\n",
    "missing_percentage_victim[missing_percentage_victim!= 0].plot(kind = 'barh', title ='Missing Values As Percentages In Victims' )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "0d8edb0c-fbcc-4ded-86cf-536ef0e9f963",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    317594.000000\n",
       "mean         35.027497\n",
       "std          16.347923\n",
       "min           0.000000\n",
       "25%          23.000000\n",
       "50%          32.000000\n",
       "75%          47.000000\n",
       "max         120.000000\n",
       "Name: victim_age, dtype: float64"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.victim_age.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "cd7723e2-42ef-4469-a633-d28baf2971eb",
   "metadata": {},
   "outputs": [],
   "source": [
    "df2['victim_age'] = df2['victim_age'].fillna('35')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "e8c7650b-0f5e-456c-a234-3897a72e85f6",
   "metadata": {},
   "outputs": [],
   "source": [
    "df2['victim_sex'] = df2['victim_sex'].fillna('unknown')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2bee3115-afdc-47cb-aab6-0418402a1167",
   "metadata": {},
   "outputs": [],
   "source": [
    "df2['pcf_violation_category'] = df2['pcf_violation_category'].fillna('unknown')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "5bdb1413-617b-4692-9227-e6619e31bec1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "victim_seating_position    232\n",
       "id                           0\n",
       "case_id                      0\n",
       "party_number                 0\n",
       "victim_role                  0\n",
       "victim_sex                   0\n",
       "victim_age                   0\n",
       "victim_degree_of_injury      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.isna().sum().sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "91a581aa-d531-4271-a026-761d657d688e",
   "metadata": {},
   "outputs": [],
   "source": [
    "df2.to_csv('cleaned_victims.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "3559378a-922f-4475-b57a-1b808299e057",
   "metadata": {},
   "outputs": [],
   "source": [
    "C_path = '/Users/sugandhachauhan/Documents/cleaned_collision.csv'\n",
    "df3 = pd.read_csv(C_path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "431578e8-6f5d-4ea0-86a5-8b69a1f13dd7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>case_id</th>\n",
       "      <th>weather</th>\n",
       "      <th>collision_severity</th>\n",
       "      <th>killed_victims</th>\n",
       "      <th>injured_victims</th>\n",
       "      <th>party_count</th>\n",
       "      <th>pcf_violation_category</th>\n",
       "      <th>road_surface</th>\n",
       "      <th>road_condition</th>\n",
       "      <th>lighting</th>\n",
       "      <th>collision_date</th>\n",
       "      <th>collision_time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3511283.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>other injury</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>traffic signals and signs</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>dark with street lights</td>\n",
       "      <td>2017-01-02</td>\n",
       "      <td>6:56:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3515256.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>pain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>improper turning</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>daylight</td>\n",
       "      <td>2017-01-02</td>\n",
       "      <td>7:08:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3515353.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>fatal</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "      <td>unsafe starting or backing</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>daylight</td>\n",
       "      <td>2017-01-08</td>\n",
       "      <td>16:46:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3522213.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "      <td>speeding</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>dark with no street lights</td>\n",
       "      <td>2017-01-11</td>\n",
       "      <td>21:04:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3522552.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>fatal</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>traffic signals and signs</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>daylight</td>\n",
       "      <td>2017-01-18</td>\n",
       "      <td>12:27:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3522688.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "      <td>unsafe lane change</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>dusk or dawn</td>\n",
       "      <td>2017-01-21</td>\n",
       "      <td>17:09:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3522758.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>fatal</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>other hazardous violation</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>daylight</td>\n",
       "      <td>2017-01-19</td>\n",
       "      <td>14:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>3524606.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>other injury</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>speeding</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>dark with no street lights</td>\n",
       "      <td>2017-01-17</td>\n",
       "      <td>6:46:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>3524755.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>other injury</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>wrong side of road</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>daylight</td>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>16:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>3524907.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>other injury</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2</td>\n",
       "      <td>speeding</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>daylight</td>\n",
       "      <td>2017-01-02</td>\n",
       "      <td>16:31:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>3525228.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "      <td>unsafe starting or backing</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>daylight</td>\n",
       "      <td>2017-01-15</td>\n",
       "      <td>12:22:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>3526218.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>pain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>improper turning</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>daylight</td>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>12:15:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>3526249.0</td>\n",
       "      <td>cloudy</td>\n",
       "      <td>other injury</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>speeding</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>daylight</td>\n",
       "      <td>2017-01-02</td>\n",
       "      <td>12:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>3526377.0</td>\n",
       "      <td>cloudy</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>improper turning</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>dark with street lights</td>\n",
       "      <td>2017-01-04</td>\n",
       "      <td>0:30:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>3526444.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>pain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1</td>\n",
       "      <td>other than driver (or pedestrian)</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>dark with no street lights</td>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>18:20:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>3526552.0</td>\n",
       "      <td>cloudy</td>\n",
       "      <td>pain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>unknown</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>daylight</td>\n",
       "      <td>2017-01-03</td>\n",
       "      <td>16:20:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>3526847.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "      <td>automobile right of way</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>dark with street lights</td>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>18:27:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>3526937.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>pain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>speeding</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>dark with no street lights</td>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>22:20:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>3527094.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "      <td>speeding</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>dark with street lights</td>\n",
       "      <td>2017-01-08</td>\n",
       "      <td>17:55:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>3527105.0</td>\n",
       "      <td>cloudy</td>\n",
       "      <td>pain</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>improper turning</td>\n",
       "      <td>dry</td>\n",
       "      <td>normal</td>\n",
       "      <td>daylight</td>\n",
       "      <td>2017-01-11</td>\n",
       "      <td>13:48:00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      case_id weather    collision_severity  killed_victims  injured_victims  \\\n",
       "0   3511283.0   clear          other injury             0.0              1.0   \n",
       "1   3515256.0   clear                  pain             0.0              1.0   \n",
       "2   3515353.0   clear                 fatal             1.0              0.0   \n",
       "3   3522213.0   clear  property damage only             0.0              0.0   \n",
       "4   3522552.0   clear                 fatal             1.0              1.0   \n",
       "5   3522688.0   clear  property damage only             0.0              0.0   \n",
       "6   3522758.0   clear                 fatal             1.0              1.0   \n",
       "7   3524606.0   clear          other injury             0.0              1.0   \n",
       "8   3524755.0   clear          other injury             0.0              1.0   \n",
       "9   3524907.0   clear          other injury             0.0              2.0   \n",
       "10  3525228.0   clear  property damage only             0.0              0.0   \n",
       "11  3526218.0   clear                  pain             0.0              1.0   \n",
       "12  3526249.0  cloudy          other injury             0.0              1.0   \n",
       "13  3526377.0  cloudy  property damage only             0.0              0.0   \n",
       "14  3526444.0   clear                  pain             0.0              2.0   \n",
       "15  3526552.0  cloudy                  pain             0.0              1.0   \n",
       "16  3526847.0   clear  property damage only             0.0              0.0   \n",
       "17  3526937.0   clear                  pain             0.0              1.0   \n",
       "18  3527094.0   clear  property damage only             0.0              0.0   \n",
       "19  3527105.0  cloudy                  pain             0.0              1.0   \n",
       "\n",
       "    party_count             pcf_violation_category road_surface  \\\n",
       "0             2          traffic signals and signs          dry   \n",
       "1             2                   improper turning          dry   \n",
       "2             2         unsafe starting or backing          dry   \n",
       "3             2                           speeding          dry   \n",
       "4             2          traffic signals and signs          dry   \n",
       "5             2                 unsafe lane change          dry   \n",
       "6             2          other hazardous violation          dry   \n",
       "7             2                           speeding          dry   \n",
       "8             2                 wrong side of road          dry   \n",
       "9             2                           speeding          dry   \n",
       "10            2         unsafe starting or backing          dry   \n",
       "11            1                   improper turning          dry   \n",
       "12            2                           speeding          dry   \n",
       "13            1                   improper turning          dry   \n",
       "14            1  other than driver (or pedestrian)          dry   \n",
       "15            2                            unknown          dry   \n",
       "16            2            automobile right of way          dry   \n",
       "17            2                           speeding          dry   \n",
       "18            2                           speeding          dry   \n",
       "19            2                   improper turning          dry   \n",
       "\n",
       "   road_condition                    lighting collision_date collision_time  \n",
       "0          normal     dark with street lights     2017-01-02        6:56:00  \n",
       "1          normal                    daylight     2017-01-02        7:08:00  \n",
       "2          normal                    daylight     2017-01-08       16:46:00  \n",
       "3          normal  dark with no street lights     2017-01-11       21:04:00  \n",
       "4          normal                    daylight     2017-01-18       12:27:00  \n",
       "5          normal                dusk or dawn     2017-01-21       17:09:00  \n",
       "6          normal                    daylight     2017-01-19       14:00:00  \n",
       "7          normal  dark with no street lights     2017-01-17        6:46:00  \n",
       "8          normal                    daylight     2017-01-01       16:00:00  \n",
       "9          normal                    daylight     2017-01-02       16:31:00  \n",
       "10         normal                    daylight     2017-01-15       12:22:00  \n",
       "11         normal                    daylight     2017-01-01       12:15:00  \n",
       "12         normal                    daylight     2017-01-02       12:00:00  \n",
       "13         normal     dark with street lights     2017-01-04        0:30:00  \n",
       "14         normal  dark with no street lights     2017-01-01       18:20:00  \n",
       "15         normal                    daylight     2017-01-03       16:20:00  \n",
       "16         normal     dark with street lights     2017-01-01       18:27:00  \n",
       "17         normal  dark with no street lights     2017-01-01       22:20:00  \n",
       "18         normal     dark with street lights     2017-01-08       17:55:00  \n",
       "19         normal                    daylight     2017-01-11       13:48:00  "
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "4567ddf7-160d-4745-a8b9-1e296198e913",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pcf_violation_category    3389\n",
       "road_surface              1977\n",
       "road_condition            1860\n",
       "lighting                  1181\n",
       "weather                   1051\n",
       "collision_time             742\n",
       "injured_victims             55\n",
       "killed_victims              51\n",
       "case_id                      0\n",
       "collision_severity           0\n",
       "party_count                  0\n",
       "collision_date               0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.isna().sum().sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "87d81f4f-db0f-430d-a843-95225e3a866c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'Missing Values As Percentages In collision'}>"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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MahWQK8+1ur1119//aXp8oiIiIjKBB/4XwHFxcUVu65q1arvrxAiIiKicsSgWgE5OztrugQiIiKicsegSh+Ev6f68uH/REREHxheo0pEREREksSgSkRERESSxKBKRERERJLEoEpEREREksSgSkRERESSxKBKRERERJLEoEpEREREksSgSkRERESSxKBKRERERJLEoEpEREREksSgSkRERESSxKBKRERERJLEoEpEREREksSgSkRERESSxKBKRERERJLEoEpEREREksSgSkRERESSxKBKRERERJLEoEpEREREksSgSkRERESSxKBKRERERJLEoEpEREREkqSj6QKIykL9oIPQUhgUWp4yq7MGqiEiIqKywBlVIiIiIpIkBlUiIiIikiQGVSIiIiKSJAZVIiIiIpIkBlUiIiIikiQGVSIiIiKSpI86qHp6emLkyJFqt5fJZNi5c2e51VOSkJAQmJmZlUlfUVFRkMlkyMzM1GgfRERERCX5qJ+jun37dujq6qrdPi0tDebm5uVY0fvRqlUrpKWlwdTUVK32np6eaNSoERYsWPDWfRARERGV1kcdVCtVqlSq9jY2Nu+0v/z8fMhkMmhpaXYiWy6Xv/OxlEUfRERERCXhqf//nfp3cnLCL7/8gv79+8PY2BgODg74888/Vdq/euq/qFPfcXFxkMlkSElJAfD/T9fv3r0bLi4uUCgUSE1NRV5eHsaMGYOqVavC0NAQLVq0QFRUlMq+QkJC4ODgAAMDA/j5+SEjI0OtY7p27RpkMhmuXr2qsvzXX39FjRo1iq09JiYGnp6eMDAwgLm5OXx9ffHw4UP069cP0dHRWLhwIWQymXh8r/dRcKx79+5F7dq1YWBggB49euDx48dYs2YNnJycYG5ujhEjRiA/P1/c75IlS1CzZk3o6enB2toaPXr0UOs4iYiI6MP3UQfV182fPx/NmjXD+fPnERgYiO+++w4JCQnv1Ofjx48xe/ZsrFixApcuXYKVlRWGDRuGEydOICwsDBcuXMCXX36Jjh07IjExEQBw6tQpDBgwAMOGDUNcXBy8vLzw888/q7W/WrVqoVmzZtiwYYPK8g0bNqB3795FbhMXFwdvb2+4uLjgxIkTOHbsGLp27Yr8/HwsXLgQ7u7uGDRoENLS0pCWlgZ7e/tij3XRokUICwtDeHg4oqKi4Ofnh/3792P//v1Y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cPTp06fU16cCL++gz8/PR4sWLWBgYID169dDX18fjo6Ohdr6+PigQYMGCAgIwIIFC/DixQsEBgbCw8MDzZo1K4tDh5OTE06dOoWUlBQYGRmhUqVKZdJvrVq1EBAQgG+++Qbz589H48aNce/ePURGRsLV1RWdO3cuk/0QERFRxcUZVTVNnjwZo0ePxpQpU1C3bl189dVXSE9Ph4GBAQ4ePIgHDx7Azc0NPXr0gLe3NxYvXvxW+zEzM8Py5cvRunVruLq64vDhw9izZw8sLCwKtZXJZNi1axfMzc3Rrl07+Pj4oHr16ti0adO7Hq5ozJgx0NbWhouLCywtLZGamlpmfa9evRrffPMNRo8ejdq1a6Nbt26IjY2Fg4NDme2DiIiIKi6ZIAiCposgelvZ2dkwNTWF/cjN0FIYaLocek3KLM6MExFRYQU/v7OysmBiYlJsO86oEhEREZEkMah+xFJTU1UeDfX6qyxP8xMRERGVFm+m+ojZ2toiLi6uxPVEREREmsKg+hHT0dGBs7OzpssgIiIiKhJP/RMRERGRJHFGlT4If0/1LfGuQSIiIqp4OKNKRERERJLEoEpEREREksSgSkRERESSxKBKRERERJLEoEpEREREksSgSkRERESSxKBKRERERJLEoEpEREREksSgSkRERESSxKBKRERERJLEoEpEREREksSgSkRERESSxKBKRERERJLEoEpEREREksSgSkRERESSxKBKRERERJLEoEpEREREksSgSkRERESSxKBKRERERJLEoEpEREREksSgSkRERESSxKBKRERERJKko+kCiMpC/aCD0FIYaLoMqsBSZnXWdAlERPQazqgSERERkSQxqBIRERGRJDGoEhEREZEkMagSERERkSQxqBIRERGRJDGoEhEREZEkMajSO/H09MTIkSM1XQYRERF9gBhUSS1RUVGQyWTIzMzUdClERET0kWBQJcl59uyZpksgIiIiCWBQraD27t0LMzMz5OfnAwDi4uIgk8kwfvx4sc3AgQPx9ddfAwCOHTuGtm3bQl9fH/b29hgxYgQePXoktl23bh2aNWsGY2Nj2NjYoHfv3khPTwcApKSkwMvLCwBgbm4OmUyGfv36idsqlUqMHTsWlSpVgo2NDYKDg1VqzczMxMCBA2FpaQkTExO0b98e8fHx4vrg4GA0atQIK1asQLVq1aCnp1fs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06cBAMuWLUPt2rUxd+5c1K5dG7169UK/fv3eeBwzZ86Eqamp+LK3t3+r8SAiIiLpY1D9SCQkJMDe3h42NjbisubNmxfZ1tXVVfx/lSpVAADp6eml3uer/RgaGsLExETsJyEhAW5ubirti6vnVRMmTEBWVpb4unnzZqnrIiIiooqBN1NRIbq6uuL/ZTIZAECpVL5TPwV9vU0/r1IoFFAoFO/UBxEREVUMnFH9SNSuXRs3b97E3bt3xWWxsbGl7kculyM/P79M6jlz5ozKsreph4iIiD5cDKofiU8++QQ1atRA3759ceHCBcTExGDSpEkA/v+sqTqcnJyQm5uLyMhI3L9/H48fP36reoYMGYKrV69i3LhxuHbtGjZv3oyQkJBS10NEREQfLgbVj4S2tjZ27tyJ3NxcuLm5YeDAgeJd9np6emr306pVKwwdOhRfffUVLC0tMWfOnLeqp1q1ati6dSu2b98OV1dXLF26VKyHp/aJiIgIAGSCIAiaLoI0IyYmBm3atEFSUhJq1Kih6XIwY8YM/PHHH6W6QSo7O/vl3f8jN0NLYVCO1RGpJ2VWZ02XQEQkeQU/v7OysmBiYlJsO95M9RHZsWMHjIyMULNmTSQlJeGHH35A69atNRZSlyxZAjc3N1hYWCAmJgZz587FsGHDNFILERERSQ+D6kckJycH48aNQ2pqKipXrgwfHx/Mnz9fY/UkJibi559/xoMHD+Dg4IDRo0djwoQJGquHiIiIpIWn/qlC46l/khqe+iciejN1T/3zZioiIiIikiSe+qcPwt9TfUv8jYyIiIgqHs6oEhEREZEkMagSERERkSQxqBIRERGRJDGoEhEREZEkMagSERERkSQxqBIRERGRJDGoEhEREZEkMagSERERkSQxqBIRERGRJDGoEhEREZEkMagSERERkSQxqBIRERGRJDGoEhEREZEkMagSERERkSQxqBIRERGRJDGoEhEREZEkMagSERERkSQxqBIRERGRJDGoEhEREZEkMagSERERkSQxqBIRERGRJDGoEhEREZEk6Wi6AKKyUD/oILQUBpoug4g0KGVWZ02XQERljDOqRERERCRJDKpEREREJEkMqkREREQkSQyqRERERCRJDKpEREREJEkMqkREREQkSQyq71FKSgpkMhni4uI0XUqxQkJCYGZmJn4cHByMRo0albhNRTguIiIi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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "missing_percentage_coll = df3.isna().sum().sort_values(ascending=False)/len(df3)\n",
    "missing_percentage_coll[missing_percentage_coll!= 0].plot(kind = 'barh', title ='Missing Values As Percentages In collision' )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "16dea95e-2682-42e1-abf0-d9370b0e20ac",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 270376 entries, 0 to 270375\n",
      "Data columns (total 12 columns):\n",
      " #   Column                  Non-Null Count   Dtype  \n",
      "---  ------                  --------------   -----  \n",
      " 0   case_id                 270376 non-null  float64\n",
      " 1   weather                 269325 non-null  object \n",
      " 2   collision_severity      270376 non-null  object \n",
      " 3   killed_victims          270325 non-null  float64\n",
      " 4   injured_victims         270321 non-null  float64\n",
      " 5   party_count             270376 non-null  int64  \n",
      " 6   pcf_violation_category  266987 non-null  object \n",
      " 7   road_surface            268399 non-null  object \n",
      " 8   road_condition          268516 non-null  object \n",
      " 9   lighting                269195 non-null  object \n",
      " 10  collision_date          270376 non-null  object \n",
      " 11  collision_time          269634 non-null  object \n",
      "dtypes: float64(3), int64(1), object(8)\n",
      "memory usage: 24.8+ MB\n"
     ]
    }
   ],
   "source": [
    "df3.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "96eb8f95-4344-4c26-b74d-e2e81f6c4781",
   "metadata": {},
   "outputs": [],
   "source": [
    "df3['pcf_violation_category'] = df3['pcf_violation_category'].fillna('other hazardous violation')\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "2df192e7-e77a-4098-921d-ce478df74742",
   "metadata": {},
   "outputs": [],
   "source": [
    "df3.to_csv('cleaned_collision.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9f264947-baab-4fe4-af6f-3d4983ac6ac6",
   "metadata": {},
   "source": [
    "###\n",
    "### Loading data in MYSQL work bench"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "id": "55ae7ba1-bbe4-4796-99c4-1e655ee07ac0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import mysql.connector"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "5a76e122-d1a3-42a3-9382-ce757fb9019d",
   "metadata": {},
   "outputs": [],
   "source": [
    "mydb = mysql.connector.connect(\n",
    "    host = 'localhost',\n",
    "    user = 'root',\n",
    "    passwd = '#Wisdom555',\n",
    "    database = 'CALIFORNIA_ACCIDENTS',\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "id": "606d2684-f726-4917-b1b1-0f8a1bc27179",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<mysql.connector.connection_cext.CMySQLConnection object at 0x1278eb5c0>\n"
     ]
    }
   ],
   "source": [
    "print(mydb)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "id": "8df8d03a-25c0-4498-9007-6b164b4b9a37",
   "metadata": {},
   "outputs": [],
   "source": [
    "mycursor = mydb.cursor()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "id": "c9ebebdb-07b8-4a0a-aa19-88f846e038b3",
   "metadata": {},
   "outputs": [],
   "source": [
    "mycursor.execute(\"CREATE DATABASE CALIFORNIA_ACCIDENTS\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a9a1cf2b-79c9-44cc-82b6-8e074799f6e1",
   "metadata": {},
   "source": [
    "### Creating and populating our database using CSV files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "id": "e3f5d962-9d28-44fa-a7db-5e3e58b5c05f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('Cal_accidents',)\n",
      "('CALIFORNIA_ACCIDENTS',)\n",
      "('information_schema',)\n",
      "('mysql',)\n",
      "('performance_schema',)\n",
      "('sys',)\n"
     ]
    }
   ],
   "source": [
    "mycursor.execute(\"SHOW DATABASES\")\n",
    "for db in mycursor:\n",
    "    print(db)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c84b215c-4498-4fe9-92c2-365ec9f70f6e",
   "metadata": {},
   "outputs": [],
   "source": [
    "create_table_collision = \"\"\"\n",
    "    CREATE TABLE Collisions (\n",
    "    Coll_id INT PRIMARY KEY,\n",
    "    Weather VARCHAR(200),\n",
    "    Severity CHAR(100),\n",
    "    Deaths INT,\n",
    "    Injury INT,\n",
    "    No_injured INT,\n",
    "    Pcf_violaiton CHAR(100),\n",
    "    Road_surface CHAR(100),\n",
    "    Road_condition CHAR(100),\n",
    "    Lighting CHAR(100),\n",
    "    Coll_date DATETIME,\n",
    "    Coll_time TIME\n",
    "    );\n",
    "    \"\"\"\n",
    "mycursor.execute(create_table_collision)\n",
    "mydb.commit()\n",
    "print(\"Collisions table created successfully\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "id": "af8d2a81-c365-4924-ac0e-af9912a1dbf4",
   "metadata": {},
   "outputs": [],
   "source": [
    "# mycursor.execute(\"DROP TABLE Collisions\")\n",
    "# mydb.commit()  # Commit the change\n",
    "# print(\"Table Collision deleted successfully\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d9262c84-9c21-4f33-99c5-f25500b00ae4",
   "metadata": {},
   "outputs": [],
   "source": [
    "with open('/Users/sugandhachauhan/Documents/cleaned_collision.csv', newline='') as csvfile:\n",
    "    reader = csv.reader(csvfile)\n",
    "    next(reader)  # Skip the header row\n",
    "    for row in reader:\n",
    "        sql = \"\"\"\n",
    "        INSERT INTO Collisions (Coll_id, Weather, Severity, Deaths, Injury, No_injured, Pcf_violaiton, Road_surface, Road_condition, Lighting, Coll_date, Coll_time)\n",
    "        VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s);\n",
    "        \"\"\"\n",
    "mycursor.execute(sql, row) \n",
    "mydb.commit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "id": "65e4b9a5-8f5a-4f31-882f-ca6108a391a9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parties table created sucessfully\n"
     ]
    }
   ],
   "source": [
    "create_table_query = \"\"\"\n",
    "    CREATE TABLE PARTIES (\n",
    "        id INT PRIMARY KEY,\n",
    "        case_id INT,\n",
    "        party_number INT,\n",
    "        party_type VARCHAR(255),\n",
    "        party_sex VARCHAR(50),\n",
    "        party_age INT,\n",
    "        cellphone_use VARCHAR(50),\n",
    "        party_number_killed INT,\n",
    "        party_number_injured INT,\n",
    "        movement_preceding_collision VARCHAR(255),\n",
    "        party_vehicle VARCHAR(255),\n",
    "        FOREIGN KEY (case_id) REFERENCES Collisions(Coll_id)\n",
    "    );\n",
    "    \"\"\"\n",
    "mycursor.execute(create_table_query)\n",
    "mydb.commit()\n",
    "print(\"Parties table created sucessfully\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "id": "572053ea-ce0b-4b2f-b79c-fd9fe0ec602d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Victims table created sucssfully\n"
     ]
    }
   ],
   "source": [
    "create_table_query = \"\"\"\n",
    "    CREATE TABLE VICTIMS (\n",
    "        id INT PRIMARY KEY,\n",
    "        case_id INT,\n",
    "        party_number INT,\n",
    "        victim_role VARCHAR(100),\n",
    "        victim_sex VARCHAR(1),\n",
    "        victim_age INT,\n",
    "        victim_degree_of_injury VARCHAR(100),\n",
    "        victim_seating_position VARCHAR(100),\n",
    "        FOREIGN KEY (case_id) REFERENCES Collisions(Coll_id)\n",
    "    );\n",
    "    \"\"\"\n",
    "mycursor.execute(create_table_query)\n",
    "mydb.commit()\n",
    "print(\"Victims table created sucssfully\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4e0a36eb-f737-4ee4-8635-353bdd51a1ea",
   "metadata": {},
   "outputs": [],
   "source": [
    "with open('/Users/sugandhachauhan/Documents/cleaned_parties.csv', newline='') as csvfile:\n",
    "            reader = csv.reader(csvfile)\n",
    "            next(reader) \n",
    "            \n",
    "            \n",
    "            insert_stmt = \"\"\"\n",
    "            INSERT INTO PARTIES (id,case_id, party_number, party_type, party_sex, party_age, \n",
    "                                 cellphone_use, party_number_killed, party_number_injured,\n",
    "                                 movement_preceding_collision, party_vehicle)\n",
    "            VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s);\n",
    "            \"\"\"\n",
    "            \n",
    "            \n",
    "            for row in reader:\n",
    "                mycursor.execute(insert_stmt, row)\n",
    "                \n",
    "       \n",
    "mydb.commit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "id": "6706e991-8907-415b-9b44-25d2af2ee653",
   "metadata": {},
   "outputs": [],
   "source": [
    "with open(csv_file_path, newline='') as csvfile:\n",
    "    reader = csv.reader(csvfile)\n",
    "    next(reader)  \n",
    "\n",
    "    \n",
    "    insert_query = \"\"\"\n",
    "    INSERT INTO PARTIES (\n",
    "        id, case_id, party_number, party_type, party_sex, party_age,\n",
    "        cellphone_use, party_number_killed, party_number_injured,\n",
    "        movement_preceding_collision, party_vehicle\n",
    "    ) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)\n",
    "    \"\"\"\n",
    "\n",
    "  \n",
    "    for row in reader:\n",
    "        mycursor.execute(insert_query, row)\n",
    "\n",
    "\n",
    "db_connection.commit()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "de0e0c28-d013-4947-82fb-693d036692bc",
   "metadata": {},
   "outputs": [],
   "source": [
    "mycursor.close()\n",
    "db_connection.close("
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a831940f-7f68-4555-8199-610c1e835a7a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4bc545e2-0987-4f3e-a571-6e2dc83981fe",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
